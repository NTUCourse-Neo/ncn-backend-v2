generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

// TODO: 可能要儲存使用者資訊來轉交給課務組

/// 課程檔
model Course {
  id              String           @id @default(uuid()) @db.Uuid
  /// 流水號, 可能無值
  serial          String?          @db.VarChar(5)
  /// 課號
  identifier      String           @db.VarChar(10) // TODO: remove?
  /// 課程識別碼
  code            String           @db.VarChar(10)
  /// 學年期
  semester        String           @db.VarChar(5)
  /// 班次
  class           String           @db.VarChar(3)
  /// 課程類別
  type            CourseType
  /// 通識領域當 `type === General` 時才使用
  generalMark     GeneralMark[]
  // 必選修，當 `type === Normal` 時才使用，來自舊系統 `sel_code` and `co_rep`
  compulsory      CourseCompulsory
  /// 全學年制, 舊系統為1 為全學年制，2為半學年制 (forh)
  length          CourseLength
  /// 學分
  credits         Decimal
  /// 通識課程配有TA，非通識課程為null，來自舊系統NOL table com
  isTaAssigned    Boolean?
  /// 英語授課，來自舊系統NOL table english
  isEnglishTaught Boolean
  /// 可充當外文領域
  asForeign       Boolean?
  /// 課程大綱網址，來自舊系統 NOL table `ntu_course`
  url             String?          @db.VarChar(200)
  /// 密集課程的週次
  intensiveWeeks  Int[]            @default([])

  // TODO: 完成以下 column 命名
  studentNumber Int
  // 外系人數 Int
  // 外校人數 Int
  // 加選人數 Int

  // TODO: 是否保留以下 column?
  /// 實習分組, 0~4
  groupId                Int // grpno
  /// 系所縮寫，舊系統時用於產生課號，來自 `dpt_abbr`
  departmentAbbreviation String @db.VarChar(6)
  /// 課程流水號，舊系統時用於產生課號，來自 `cou_teacno`
  codeSerial             String @db.VarChar(4)

  // 1-n
  practiceGroup PracticeGroup[]
  schedules     Schedule[]
  limits        Limit[]

  // n-1
  gradeId            String
  /// 開課對象年級，系所查詢時使用，來自舊系統 `year`
  grade              Grade      @relation(fields: [gradeId], references: [id])
  targetDepartmentId String
  targetDepartment   Department @relation(fields: [targetDepartmentId], references: [id])
  /// 教師代碼
  teacherId          String
  teacher            Teacher    @relation(fields: [teacherId], references: [id])

  // m-n
  // TODO: duplicated usage with table `CoursePrecourseLimit`
  prerequisiteOf Course[] @relation("CoursePrerequisite")
  prerequisites  Course[] @relation("CoursePrerequisite")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  translations          CourseTranslation[]
  specializationProgram CoursespecializationProgram[]

  @@unique([semester, serial])
}

model CourseTranslation {
  language Language

  /// 課程名稱
  name    String
  /// 課程備註
  comment String

  courseId String @db.Uuid
  course   Course @relation(fields: [courseId], references: [id])

  @@id([language, courseId])
}

model Schedule {
  /// 1~7: 星期一到星期日
  weekday     Int
  lessons     String
  classroomId String    @db.Uuid
  classroom   Classroom @relation(fields: [classroomId], references: [id])

  changed CourseChanged @default(Normal)

  courseId String @db.Uuid
  course   Course @relation(fields: [courseId], references: [id])

  @@id([courseId, weekday])
}

model Department {
  // 系所代碼，來自舊系統 `dpt_code`
  id       String @id @db.VarChar(4)
  /// 人事單位代碼，來自舊系統 NOL table `dep_unit.adcd`
  hrSerial String @db.VarChar(7)

  grades  Grade[]
  courses Course[]

  translations DepartmentTranslation[]
}

model DepartmentTranslation {
  language Language

  /// 系所名稱
  name      String
  /// 系所簡稱
  shortName String

  departmentId String     @db.VarChar(4)
  department   Department @relation(fields: [departmentId], references: [id])

  @@id([language, departmentId])
}

/// 計中認證後取得5碼人員編號轉換教務處使用之6碼教師代碼用，來自舊系統 NOL table `tea_emp`, 
model Teacher {
  /// 教師代碼，來自舊系統 `tea_code2`
  id         String @id @db.VarChar(6)
  /// 人員編號
  employeeId String @db.VarChar(5)

  Course       Course[]
  translations TeacherTranslation[]
}

model TeacherTranslation {
  language Language

  /// 教師名稱
  name String

  teacherId String  @db.VarChar(6)
  teacher   Teacher @relation(fields: [teacherId], references: [id])

  @@id([language, teacherId])
}

// 來自舊系統 NOL table `ifcrfsl`
model Limit {
  id           String             @id
  courses      Course[]
  translations LimitTranslation[]
}

model LimitTranslation {
  language Language

  /// 限制說明
  description String

  limitId String @db.VarChar(6)
  limit   Limit  @relation(fields: [limitId], references: [id])

  @@id([language, limitId])
}

/// 修課學生限制，來自舊系統 NOL table `ifcrfpre`
model CourseStudentLimit {
  /// 課程識別碼
  courseId           String             @db.VarChar(9)
  identificationType IdentificationType
  studnetLimitType   StudentLimitType

  @@unique([courseId, identificationType, studnetLimitType])
}

// TODO: duplicated usage with table `Course.prerequisites`
/// 先擋修科目
model CoursePrecourseLimit {
  /// 課程識別碼
  courseId             String  @db.VarChar(9)
  /// 序號
  order                Int
  // TODO: 待確認原始資料內容，複數課名?
  /// 先修科目
  precourse            String  @db.VarChar(20)
  /// 及格分數
  requiredScore        Int
  /// 當學期是否並修
  semesterCourseSelect Boolean

  @@unique([courseId, order])
}

// 來自舊系統 NOL table `ifcrfcn`、`ifcrfyl`
model Grade {
  id    String @id @db.VarChar(1)
  /// 下拉選單順序，來自舊系統 `Cl_seq`
  order Int

  courses      Course[]
  departments  Department[]
  translations GradeTranslation[]
}

model GradeTranslation {
  language Language

  /// 年級名稱
  name String

  gradeId String @db.VarChar(1)
  grade   Grade  @relation(fields: [gradeId], references: [id])

  @@id([language, gradeId])
}

/// 來自舊系統 NOL table `ifcrfcr`
model Classroom {
  id            String  @id @db.Uuid
  /// 教室編號
  name          String  @db.VarChar(9)
  location      String  @db.VarChar(22)
  buildingName  String? @db.VarChar(32)
  /// 用於產生外部地圖連結
  buildingId    String  @db.VarChar(8)
  accessibility Boolean // TODO: bool or enum?

  // TODO: 是否保留以下 column
  layer String? // values: "build" or ""

  // 1-n
  translations ClassroomTranslation[]
  Schedule     Schedule[]
}

model ClassroomTranslation {
  language Language

  /// 教室詳細資料
  detail String

  classroomId String    @db.Uuid
  classroom   Classroom @relation(fields: [classroomId], references: [id])

  @@id([language, classroomId])
}

/// 實習分組，來自舊系統 NOL table `cougrp`
model PracticeGroup {
  id            String @id @db.Uuid
  // parsed with `semester`+`identifier`
  courseId      String @db.Uuid
  ///組別
  group         String @db.VarChar(1)
  /// 學生人數
  studentNumber Int
  /// 教學助理人數
  taNumber      Int

  // TODO: 設計課程時間關聯
  // schedule Schedule[]

  translations PracticeGroupTranslation[]

  course Course @relation(fields: [courseId], references: [id])
}

model PracticeGroupTranslation {
  language        Language
  practiceGroupId String   @db.Uuid

  comment String

  practiceGroup PracticeGroup @relation(fields: [practiceGroupId], references: [id])

  @@id([language, practiceGroupId])
}

// ########################################
//  核心能力相關
// ########################################

// TODO: fix relations, translation model

// model CourseCapability {
//   /// 課程識別碼
//   courseId String @db.VarChar(9)
//   // 待確認是否需要
//   // deparmentId String @db.VarChar(4)
//   /// 建議修課年級，[1-7]
//   recommendedGrades Int[]  
// }

/// 系所核心能力
model DeparmentCapability {
  /// 系所代碼
  deparmentId    String @db.VarChar(4)
  /// 核心代碼
  capabilityCode String @db.VarChar(1)

  @@unique([deparmentId, capabilityCode])
}

/// 核心能力類型
model CapabilityType {
  /// 核心代碼， [A-Z]
  code String @id @db.VarChar(1)

  translations CapabilityTypeTranslation[]
}

model CapabilityTypeTranslation {
  language Language

  name    String
  comment String

  typeCode String         @db.VarChar(1)
  type     CapabilityType @relation(fields: [typeCode], references: [code])

  @@id([language, typeCode])
}

/// 課程分類
model CourseCustomType {
  /// 課程分類代碼， [A-Z]
  code String @id @db.VarChar(1)

  translations CourseCustomTypeTranslation[]
}

model CourseCustomTypeTranslation {
  language Language

  name String

  typeCode String           @db.VarChar(1)
  type     CourseCustomType @relation(fields: [typeCode], references: [code])

  @@id([language, typeCode])
}

// ########################################
//  領域專長
// ########################################

/// 領域專長說明主表
model SpecializationProgram {
  /// 領域專長代碼
  code  String  @id @db.VarChar(10)
  /// 是否通過
  apply Boolean

  translations SpecializationProgramTranslation[]
  courses      CoursespecializationProgram[]
}

model SpecializationProgramTranslation {
  language Language

  name String

  specializationProgramCode String                @db.VarChar(1)
  specializationProgram     SpecializationProgram @relation(fields: [specializationProgramCode], references: [code])

  @@id([language, specializationProgramCode])
}

/// 課程領域專長關聯
model CoursespecializationProgram {
  /// 課程識別碼
  courseId String @db.Uuid
  course   Course @relation(fields: [courseId], references: [id])

  /// 領域專長代碼
  specializationProgramCode String                @db.VarChar(10)
  specializationProgram     SpecializationProgram @relation(fields: [specializationProgramCode], references: [code])

  @@unique([courseId, specializationProgramCode])
}

// ########################################
// 課程大綱 from ceiba db
// ########################################

// TODO: 有許多重複的欄位，待確認使用方法
// TODO: missing relations

/// 課程大綱主表
model Syllabus {
  // 原sn
  id       Int    @id
  /// 學期，如103-1
  semester String @db.VarChar(6)
  /// 課程識別碼
  // CEIBA 課程網頁有非正式課程及正式課程兩種。非正式課程指不在正式課程中的課程。
  // 正式課程，
  // 課程識別碼如 101 80002

  // 非正式課程，
  // 課程識別碼，前三碼為XXX 80002
  courseNo       String                 @db.VarChar(10)
  /// 班級
  classNo        String                 @db.VarChar(5)
  /// CEIBA 專用之 6 碼課號
  // 開設 CEIBA 網頁之課程皆有唯一的 6 碼課號。
  // 未開設 CEIBA 課程網頁者，沒有。
  courseSn       String?                @db.VarChar(6)
  // lang 欄位為big5 時，格式為 第1週
  // lang 欄位為 eng 時，格式為 Week 1
  unit           String                 @db.VarChar(30)
  /// 本筆課程進度表的日期
  note           String                 @db.VarChar(256)
  /// 是否為異動或新增
  // 匯入之前學期的課程資料時填入 0 ，只要有異動或是新增時都填入 1 。 
  // 區分課程進度的建立類型用。
  flag           Boolean
  /// 課程主題
  subject        String
  /// 課程進度表允許顯示的日期中的年月日。
  // 過了設定的期限才會顯示給同學看見
  publicDate     DateTime
  /// 表格內容類型
  classification SyllabusClassification
  /// 檔案管理類型
  fileManagement SyllabusFileManagement
  lang           Language

  // 1-1
  officeTimeSwitch SyllabusOfficeTimeSwitch?

  // 1-n
  files       SyllabusFile[]
  books       SyllabusBook[]
  goals       SyllabusGoal[]
  requests    SyllabusRequest[]
  officeTimes SyllabusOfficeTime[]
}

/// 課程大綱附加資料
model SyllabusFile {
  /// 流水號，原sn
  id         Int      @id
  /// 課程大綱主表id，原syl_sn
  syllabusId Int
  /// 附加檔案名稱  
  // 請用https://ceiba.ntu.edu.tw/course/
  // 加上course_sn欄位的値
  // 再加上/content/
  fileName   String   @db.VarChar(255)
  /// 語系
  lang       Language

  syllabus Syllabus @relation(fields: [syllabusId], references: [id])
}

model SyllabusBook {
  /// 流水號，原sn
  id         Int      @id
  /// 大綱id
  syllabusId Int
  /// 書名
  name       String
  /// 語系
  lang       Language

  syllabus Syllabus @relation(fields: [syllabusId], references: [id])
}

/// 課程目標
model SyllabusGoal {
  /// 流水號
  id             Int      @id
  /// 大綱id
  syllabusId     Int
  /// 課程描述
  describe       String
  /// 課程要求
  requirement    String
  /// 課程目標
  goal           String
  /// 關鍵字
  keyword        String
  /// 指定閱讀
  designatedRead String
  /// 語系
  lang           Language

  syllabus Syllabus @relation(fields: [syllabusId], references: [id])
}

/// 課程目標建立相關資料
// TODO: 待確認我們是否會用到
// model SyllabusGoalInfo {
//   /// 流水號
//   sn       Int    @id
//   /// 學期，如103-1
//   semester String @db.VarChar(6)
//   /// 課程識別碼
//   // CEIBA 課程網頁有非正式課程及正式課程兩種。非正式課程指不在正式課程中的課程。
//   // 正式課程，
//   // 課程識別碼如 101 80002

//   // 非正式課程，
//   // 課程識別碼，前三碼為XXX 80002
//   courseNo   String @db.VarChar(10)
//   /// 班級
//   classNo    String @db.VarChar(5)
//   /// 和課程進度表流水號相同値
//   // 待確認用途
//   syllabusSn Int
//   /// CEIBA 專用之 6 碼課號
//   // 開設 CEIBA 網頁之課程皆有唯一的 6 碼課號。
//   // 未開設 CEIBA 課程網頁者，沒有。
//   courseSn   String @db.VarChar(6)

// }

/// 評量方式
model SyllabusRequest {
  /// 流水號
  id         Int      @id
  /// 大綱id 
  syllabusId Int
  /// 評分方式項目
  item       String   @db.VarChar(60)
  /// 評量項目百分比
  percent    Int
  /// 說明
  notes      String
  /// 語系
  lang       Language

  syllabus Syllabus @relation(fields: [syllabusId], references: [id])
}

/// office time
model SyllabusOfficeTime {
  /// 流水號
  id         Int    @id
  /// 大綱id 
  syllabusId Int
  /// 星期
  // 例 : 3 為 星期三
  week       String @db.VarChar(1)
  /// 開始時間的"時"
  startHour  String @db.VarChar(2)
  /// 開始時間的"分"
  startMin   String @db.VarChar(2)
  /// 結束時間的"時" 
  endHour    String @db.VarChar(2)
  /// 結束時間的"分""
  endMin     String @db.VarChar(2)

  syllabus Syllabus @relation(fields: [syllabusId], references: [id])
}

/// office time switch
// TODO: 待確認作用
model SyllabusOfficeTimeSwitch {
  /// 流水號
  id         Int     @id
  /// 大綱id 
  syllabusId Int     @unique
  /// 固定時間 或另約時間
  fixedTime  Boolean
  comment    String

  syllabus Syllabus @relation(fields: [syllabusId], references: [id])
}

/// ceiba 教師帳號 / 人員編號轉換 
// 查詢教師聯絡資料時使用
// 從 tea_emp取得人員編號再來此檔取得帳號
// 省略其他未使用欄位
model SyllabusTeacherAccount {
  /// 教師帳號
  accout String @db.VarChar(16)
  /// 人員編號
  seq    String @db.VarChar(15)

  @@unique([accout, seq])
}

/// 教師資訊
model SyllabusTeacherInfo {
  /// 帳號 
  // TODO: 待確認是否可以直接用seq欄位
  userId    String @id @db.VarChar(50)
  /// 分類，T:教職員
  // TODO: 待確認是否有不是教師的類別
  role      String @db.VarChar(1)
  /// 中文名
  // TODO: 是否需要紀錄英文名
  name      String @db.VarChar(50)
  /// 個人首頁
  url       String @db.VarChar(255)
  email     String @db.VarChar(255)
  landline  String @db.VarChar(50)
  telephone String @db.VarChar(50)
  /// 辦公室  
  address   String @db.VarChar(255)
  /// 個人簡介
  info      String

  // future-work
  /// 檔名
  // imgfile   String @db.VarChar(64)
}

// ########################################
//  enum
// ########################################

enum CourseType {
  Normal
  Grouped
  General
  // TODO: `co_tp` 其實還有其他值，是否要列入?
}

enum CourseChanged {
  Normal
  New
  Updated
  Canceled
}

enum CourseCompulsory {
  Preassigned
  Compulsory
  Elective
}

enum IdentificationType {
  CourseId
  CourseName
}

enum StudentLimitType {
  /// 本系學士班
  DepatmentBachelor
  /// 本校學士班
  SchoolBachelor
  /// 本系學士班 含研究生
  DepatmentBachelorAndGraduateStudent
  /// 本校學士班 含研究生
  SchoolBachelorAndGraduateStudent
}

enum CourseLength {
  FullYear
  HalfYear
}

enum Language {
  zh_TW @map("zh-TW")
  en_US @map("en-US")
}

enum SyllabusClassification {
  /// 表的內容為檔案類型
  File
  /// 表的內容webedit編輯的網頁
  Web
}

enum SyllabusFileManagement {
  /// 進度檔案是上傳的檔案
  File
  /// 進度檔案是用 content 目錄
  contentMemu
}

enum GeneralMark {
  A1
  A2
  A3
  A4
  A5
  A6
  A7
  A8
  B
  /// 可充抵
  C
}

enum Lesson {
  L_1
  // TODO: complete the rest
}
