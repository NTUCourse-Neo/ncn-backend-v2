generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

/// 課程檔
model Course {
  id              String           @id @default(uuid()) @db.Uuid
  /// 流水號, 可能無值
  serial          String?          @db.VarChar(5)
  /// 課號
  identifier      String           @db.VarChar(10) // TODO: remove?
  /// 課程識別碼
  code            String           @db.VarChar(10)
  /// 學年期
  semester        String           @db.VarChar(5)
  /// 班次
  class           String           @db.VarChar(3)
  /// 課程類別
  type            CourseType
  /// 通識領域當 `type === General` 時才使用
  generalMark     String?
  // 必選修，當 `type === Normal` 時才使用，來自舊系統 `sel_code` and `co_rep`
  compulsory      CourseCompulsory
  /// 全學年制, 舊系統為1 為全學年制，2為半學年制 (forh)
  length          CourseLength
  /// 學分
  credits         Decimal
  /// 通識課程配有TA，非通識課程為null，來自舊系統NOL table com
  isTaAssigned    Boolean?
  /// 英語授課，來自舊系統NOL table english
  isEnglishTaught Boolean
  /// 可充當外文領域
  asForeign       Boolean?
  /// 課程大綱網址，來自舊系統 NOL table `ntu_course`
  url             String?          @db.VarChar(200)
  /// 密集課程的週次
  intensiveWeeks  Int[]            @default([])

  // TODO: 完成以下 column 命名
  studentNumber Int
  // 外系人數 Int
  // 外校人數 Int
  // 加選人數 Int

  // TODO: 是否保留以下 column?
  /// 實習分組, 0~4
  groupId                Int // grpno
  /// 系所縮寫，舊系統時用於產生課號，來自 `dpt_abbr`
  departmentAbbreviation String @db.VarChar(6)
  /// 課程流水號，舊系統時用於產生課號，來自 `cou_teacno`
  codeSerial             String @db.VarChar(4)

  // 1-n
  practiceGroup PracticeGroup[]
  schedules     Schedule[]
  limits        Limit[]

  // n-1
  gradeId            String
  /// 開課對象年級，系所查詢時使用，來自舊系統 `year`
  grade              Grade      @relation(fields: [gradeId], references: [id])
  targetDepartmentId String
  targetDepartment   Department @relation(fields: [targetDepartmentId], references: [id])
  /// 教師代碼
  teacherId          String
  teacher            Teacher    @relation(fields: [teacherId], references: [id])

  // m-n
  prerequisiteOf Course[] @relation("coursePrerequisite")
  prerequisites  Course[] @relation("coursePrerequisite")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  translations CourseTranslations[]

  @@unique([semester, serial])
}

model CourseTranslations {
  language Language

  /// 課程名稱
  name    String
  /// 課程備註
  comment String

  courseId String @db.Uuid
  course   Course @relation(fields: [courseId], references: [id])

  @@id([language, courseId])
}

model Schedule {
  /// 1~7: 星期一到星期日
  weekday       Int
  lessons       String
  classroomName String @db.Uuid
  classroom     Classroom @relation(fields: [classroomName], references: [id])

  changed CourseChanged @default(Normal)

  courseId String @db.Uuid
  course   Course @relation(fields: [courseId], references: [id])

  @@id([courseId, weekday])
}

model Department {
  // 系所代碼，來自舊系統 `dpt_code`
  id       String @id @db.VarChar(4)
  /// 人事單位代碼，來自舊系統 NOL table `dep_unit.adcd`
  hrSerial String @db.VarChar(7)

  grades  Grade[]
  courses Course[]

  translations DepartmentTranslations[]
}

model DepartmentTranslations {
  language Language

  /// 系所名稱
  name      String
  /// 系所簡稱
  shortName String

  departmentId String     @db.VarChar(4)
  department   Department @relation(fields: [departmentId], references: [id])

  @@id([language, departmentId])
}

/// 計中認證後取得5碼人員編號轉換教務處使用之6碼教師代碼用，來自舊系統 NOL table `tea_emp`, 
model Teacher {
  /// 教師代碼，來自舊系統 `tea_code2`
  id         String @id @db.VarChar(6)
  /// 人員編號
  teacherSeq String @db.VarChar(5)

  Course       Course[]
  translations TeacherTranslations[]
}

model TeacherTranslations {
  language Language

  /// 教師名稱
  name String

  teacherId String  @db.VarChar(6)
  teacher   Teacher @relation(fields: [teacherId], references: [id])

  @@id([language, teacherId])
}

// 來自舊系統 NOL table `ifcrfsl`
model Limit {
  id           String              @id
  courses      Course[]
  translations LimitTranslations[]
}

model LimitTranslations {
  language Language

  /// 限制說明
  description String

  limitId String @db.VarChar(6)
  limit   Limit  @relation(fields: [limitId], references: [id])

  @@id([language, limitId])
}

/// 修課學生限制，來自舊系統 NOL table `ifcrfpre`
model CourseStudentLimit {
  /// 課程識別碼
  courseId           String             @db.VarChar(9)
  identificationType IdentificationType
  studnetLimitType   StudentLimitType

  @@unique([courseId, identificationType, studnetLimitType])
}

/// 先擋修科目
model CoursePrecourseLimit {
  /// 課程識別碼
  courseId             String  @db.VarChar(9)
  /// 序號
  order                Int
  // TODO: 待確認原始資料內容，複數課名?
  /// 先修科目
  precourse            String  @db.VarChar(20)
  /// 及格分數
  score                Int
  /// 當學期是否並修
  semesterCourseSelect Boolean

  @@unique([courseId, order])
}

// 來自舊系統 NOL table `ifcrfcn`、`ifcrfyl`
model Grade {
  id    String @id @db.VarChar(1)
  /// 下拉選單順序，來自舊系統 `Cl_seq`
  order Int

  courses      Course[]
  departments  Department[]
  translations GradeTranslation[]
}

model GradeTranslation {
  language Language

  /// 年級名稱
  name String

  gradeId String @db.VarChar(1)
  grade   Grade  @relation(fields: [gradeId], references: [id])

  @@id([language, gradeId])
}

/// 來自舊系統 NOL table `ifcrfcr`
model Classroom {
  id            String  @id @db.Uuid
  /// 教室編號
  name          String  @db.VarChar(9)
  location      String  @db.VarChar(22)
  buildingName  String? @db.VarChar(32)
  /// 用於產生外部地圖連結
  buildingId    String  @db.VarChar(8)
  accessibility Boolean // TODO: bool or enum?

  // TODO: 是否保留以下 column
  layer String? // values: "build" or ""

  // 1-n
  translations ClassroomTranslations[]
  Schedule     Schedule[]
}

model ClassroomTranslations {
  language Language

  /// 教室詳細資料
  detail String

  classroomId String    @db.Uuid
  classroom   Classroom @relation(fields: [classroomId], references: [id])

  @@id([language, classroomId])
}

/// 實習分組，來自舊系統 NOL table `cougrp`
model PracticeGroup {
  id            String @id @db.Uuid
  // parsed with `semester`+`identifier`
  courseId      String @db.Uuid
  ///組別
  group         String @db.VarChar(1)
  /// 學生人數
  studentNumber Int
  /// 教學助理人數
  taNumber      Int

  // TODO: 設計課程時間關聯
  // schedule Schedule[]

  translations PracticeGroupTranslations[]

  course Course @relation(fields: [courseId], references: [id])
}

model PracticeGroupTranslations {
  language        Language
  practiceGroupId String   @db.Uuid

  comment String

  practiceGroup PracticeGroup @relation(fields: [practiceGroupId], references: [id])

  @@id([language, practiceGroupId])
}

// ########################################
//  核心能力相關
// ########################################

// TODO: fix relations, translation model

// model CourseCapability {
//   /// 課程識別碼
//   courseId String @db.VarChar(9)
//   // 待確認是否需要
//   // deparmentId String @db.VarChar(4)
//   /// 建議修課年級，[1-7]
//   recommendedGrades Int[]  
// }

/// 系所核心能力
model DeparmentCapability {
  /// 系所代碼
  deparmentId    String @db.VarChar(4)
  /// 核心代碼
  capabilityCode String @db.VarChar(1)

  @@unique([deparmentId, capabilityCode])
}

/// 核心能力類型
model CapabilityType {
  /// 核心代碼， [A-Z]
  code        String @id @db.VarChar(1)
  /// 中文名稱
  nameZhTw    String @db.VarChar(100)
  /// 英文名曾
  nameEn      String @db.VarChar(4000)
  /// 中文說明
  commentZhTw String @db.VarChar(150)
  /// 英文說明
  commentEn   String @db.VarChar(4000)
}

/// 課程分類
model CourseCustomType {
  /// 課程分類代碼， [A-Z]
  code     String @id @db.VarChar(1)
  /// 中文名稱
  nameZhTw String @db.VarChar(50)
  /// 英文名曾
  nameEn   String @db.VarChar(50)
}

// ########################################
//  領域專長
// ########################################

/// 領域專長說明主表
model Domain {
  /// 領域專長代碼
  code   String  @id @db.VarChar(10)
  /// 名稱
  name   String  @db.VarChar(50)
  /// 英文名稱
  nameEn String  @db.VarChar(100)
  /// 是否通過
  apply  Boolean
}

/// 課程領域專長關聯
model CourseDomain {
  /// 課程識別碼
  CourseId   String @db.VarChar(9)
  /// 領域專長代碼
  DomainCode String @db.VarChar(10)

  @@unique([CourseId, DomainCode])
}

// ########################################
//  enum
// ########################################

enum CourseType {
  Normal
  Grouped
  General
  // TODO: `co_tp` 其實還有其他值，是否要列入?
}

enum CourseChanged {
  Normal
  New
  Updated
  Canceled
}

enum CourseCompulsory {
  Preassigned
  Compulsory
  Elective
}

enum IdentificationType {
  CourseId
  CourseName
}

enum StudentLimitType {
  /// 本系學士班
  DepatmentBachelor
  /// 本校學士班
  SchoolBachelor
  /// 本系學士班 含研究生
  DepatmentBachelorWithGraduateStudent
  /// 本校學士班 含研究生
  SchoolBachelorWithGraduateStudent
}

enum CourseLength {
  FullYear
  HalfYear
}

enum Language {
  zh_TW @map("zh-TW")
  en_US @map("zh-US")
}
